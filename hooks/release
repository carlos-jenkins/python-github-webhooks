#!/bin/bash

JSON_FILE="$1"
EVENT_TYPE="$2"
VERSION="$3"

R_ACTION=$(jq -r ".action" $JSON_FILE)
ZIPBALL_URL=$(jq -r ".release.zipball_url" $JSON_FILE)
TAG_NAME=$(jq -r ".release.tag_name" $JSON_FILE)
REPO_URL=$(jq -r ".repository.html_url" $JSON_FILE)
REPO_NAME=$(jq -r ".repository.name" $JSON_FILE)
ORG_NAME=$(echo $REPO_URL | cut -d"/" -f4)

case "$R_ACTION" in
  published)
    # Loading functions
    source $(dirname $0)/../functions/functions.sh

    echo "${GCP_KEY}" > /tmp/key.json
    echo "Building for ${R_ACTION}, ${TAG_NAME}, ${REPO_URL}"
    gcloud auth activate-service-account --key-file=/tmp/key.json
    curl -s -L --user "${GITHUB_USER}:${GITHUB_TOKEN}" "${ZIPBALL_URL}" --output /tmp/${TAG_NAME}.zip
    mkdir /tmp/${TAG_NAME}
    unzip /tmp/${TAG_NAME}.zip -d /tmp/
    # Including hidden files in *
    shopt -s dotglob
    mv /tmp/${ORG_NAME}-${REPO_NAME}*/* /tmp/${TAG_NAME}
    cd /tmp/${TAG_NAME}

    if [ -s cloudbuild.yaml ]; then
      # File cloudbuild.yaml exists in repo, we do nothing
      echo "Found cloudbuild.yaml in source repository"
      #:
    elif ls -1 *.tf > /dev/null 2>&1 && cat *.tf | tr -d '\n' | grep -q 'terraform.*{'; then
      # Repo is for IAC, we copy the cloudbuild file for terraform
      echo "Found IAC terraform project"
      cp -af /app/cloudbuild_files/cloudbuild_terraform.yaml ./cloudbuild.yaml

    elif [ "${REPO_NAME}" == "lmes-fsa-customization" ]; then
      # Repo is for field service customization, we copy the cloudbuild file
      echo "Found field service customization project"
      cp -af /app/cloudbuild_files/cloudbuild_field_service.yaml ./cloudbuild.yaml
    else
      # Copy the generic file
      echo "Copying generic file"
      cp -af /app/cloudbuild_files/cloudbuild.yaml .
    fi

    tar cvzf /tmp/${TAG_NAME}.tar.gz *
    # Excluding hidden files in *
    shopt -u dotglob
    gsutil cp /tmp/${TAG_NAME}.tar.gz gs://${GS_BUCKET_NAME}
    #gcloud config set builds/use_kaniko True
    gcloud config set project ${GCP_PROJECT_NAME}

    # Getting configuration of allinconfig
    get_configuration_allinconfig
    [ $? -ne 0 ] && { echo "ERROR: Not getting configuration of allinconfig"; exit 1; } 

    #gcloud builds submit gs://${GS_BUCKET_NAME}/${TAG_NAME}.tar.gz --async -t ${TAG_NAME} --substitutions TAG_NAME=${TAG_NAME},REPO_NAME=${REPO_NAME},_ORG_NAME=${ORG_NAME}
    gcloud builds submit gs://${GS_BUCKET_NAME}/${TAG_NAME}.tar.gz --async --substitutions TAG_NAME=${TAG_NAME},REPO_NAME=${REPO_NAME},_ORG_NAME=${ORG_NAME}${subs_allinconfig}
    ret=$?
  ;;
  *)
    echo "Skipping release event type $R_ACTION"
  ;;
esac

exit ${ret:-1}
