#!/bin/bash

JSON_FILE="$1"
EVENT_TYPE="$2"

R_ACTION=$(jq -r ".action" $JSON_FILE)
ZIPBALL_URL=$(jq -r ".release.zipball_url" $JSON_FILE)
TAG_NAME=$(jq -r ".release.tag_name" $JSON_FILE)
REPO_URL=$(jq -r ".repository.html_url" $JSON_FILE)
REPO_NAME=$(jq -r ".repository.name" $JSON_FILE)
ORG_NAME=$(echo $REPO_URL | cut -d"/" -f4)

case "$R_ACTION" in
  published)
    echo "${GCP_KEY}" > /tmp/key.json
    echo "Building for ${R_ACTION}, ${TAG_NAME}, ${REPO_URL}"
    gcloud auth activate-service-account --key-file=/tmp/key.json
    curl -s -L --user "${GITHUB_USER}:${GITHUB_TOKEN}" "${ZIPBALL_URL}" --output /tmp/${TAG_NAME}.zip
    mkdir /tmp/${TAG_NAME}
    unzip /tmp/${TAG_NAME}.zip -d /tmp/
    mv /tmp/${ORG_NAME}-${REPO_NAME}*/* /tmp/${TAG_NAME}
    cd /tmp/${TAG_NAME}
    if ! [ -f  cloudbuild.yaml ]; then
      cp /app/cloudbuild.yaml .
    fi
    tar cvzf /tmp/${TAG_NAME}.tar.gz *
    gsutil cp /tmp/${TAG_NAME}.tar.gz gs://${GS_BUCKET_NAME}
    #gcloud config set builds/use_kaniko True
    gcloud config set project ${GCP_PROJECT_NAME}
    gcloud builds submit gs://${GS_BUCKET_NAME}/${TAG_NAME}.tar.gz --async -t ${TAG_NAME} --substitutions TAG_NAME=${TAG_NAME},REPO_NAME=${REPO_NAME},_ORG_NAME=${ORG_NAME}
  ;;
  *)
    echo "Skipping release event type $R_ACTION"
  ;;
esac