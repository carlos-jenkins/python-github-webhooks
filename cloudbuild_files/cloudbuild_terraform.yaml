steps:
  # Download crypted id_rsa from bucket of the project support-prev-eslm
  - id: Download crypted rsa private key
    name: 'gcr.io/cloud-builders/gsutil'
    args:
      - cp 
      - gs://${PROJECT_ID}_cloudbuild/rsa/cloud-build-key.enc
      - cloud-build-key.enc

  # Decrypt the id_rsa private key
  - id: Decrypt rsa private key file
    name: 'gcr.io/cloud-builders/gcloud'
    args:
      - kms
      - decrypt
      - --ciphertext-file=cloud-build-key.enc
      - --plaintext-file=id_rsa
      - --location=europe
      - --keyring=cloud-build
      - --key=github-ssh-key
      - --project=$PROJECT_ID

  - id: Create docker image
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'eu.gcr.io/$PROJECT_ID/github.com/${_ORG_NAME}/$REPO_NAME:${TAG_NAME}'
      - '.'

  - id: Create latest tag
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'tag'
      - 'eu.gcr.io/$PROJECT_ID/github.com/${_ORG_NAME}/$REPO_NAME:${TAG_NAME}'
      - 'eu.gcr.io/$PROJECT_ID/github.com/${_ORG_NAME}/$REPO_NAME:latest'

  - id: Delete decrypted id_rsa file
    name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        [ -e id_rsa ] && rm -f id_rsa &> /dev/null || true

  - id: Push docker image into registry with custom tag
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'eu.gcr.io/$PROJECT_ID/github.com/${_ORG_NAME}/$REPO_NAME:${TAG_NAME}'

  - id: Push docker image into registry with latest tag
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'eu.gcr.io/$PROJECT_ID/github.com/${_ORG_NAME}/$REPO_NAME:latest'

timeout: 1800s
options:
    substitution_option: 'ALLOW_LOOSE'
